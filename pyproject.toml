[project]
name = "tk-netgraph"
readme = "README.md"
description = "A powerful graph engine for tkinter"
requires-python = ">=3.9.0"
authors = [{name = "YodaPY", email = "yodarlswitch@gmail.com"}]
keywords = ["tkinter", "customtkinter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Typing :: Typed",
]
dependencies = ["typing_extensions>=4.12.2, <5", "attrs>=24.2.0, <25"]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/YodaPY/tk-netgraph"
Repository = "https://github.com/YodaPY/tk-netgraph"

[project.scripts]
netgraph = "netgraph._cli:main"

[project.optional-dependencies]
dev = ["nox>=2024.4.15"]
"dev.slotscheck" = ["slotscheck>=0.19.0, <1"]
"dev.format" = ["ruff>=0.5.5, <1"]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "I",     # isort
    "TCH",   # typechecking imports
    "N",     # naming
    "ASYNC", # async lints
    "Q",     # enforce double-quotes
    "RSE",   # avoid needless parens
    "SIM",   # simplification
    "RUF",   # ruff lints
    "D2",    # Docstring formatting
    "D213",  # Multi-line docstring summary should start at the second line
    "D3",    # Use triple-quotes
    "D417",  # Missing argument descriptions in docstring
    "D418",  # No docstring on @overload
    "D419",  # No empty docstring
    "ANN2",  # Function missing return type annotation
]
fixable = [
    "I",     # isort errors
    "TCH",   # typechecking imports
    "F401",  # unused import
    "F404",  # late __future__ import
    "F541",  # f-string with no placeholders
]
ignore = [
    "D212",  # Multi-line docstring summary should start at the first line
    "RUF001", # ambiguous character
    "N818",   # exception name should end in Error
    "D205",   # 1 blank line required between summary line and description
]

[tool.ruff.lint.per-file-ignores]
# F401 (Unused import)
# F403 (Star import used)
# F405 (Import via star)
"__init__.py" = ["F401", "F403", "F405"]

[tool.slotscheck]
strict-imports = true
require-superclass = true
require-subclass = true
exclude-classes = """
(
    ^netgraph._canvas:NetCanvas$ |
    ^netgraph.api._canvas:NetCanvas$
)
"""

[tool.setuptools.packages.find]
exclude = ["test_lib"]